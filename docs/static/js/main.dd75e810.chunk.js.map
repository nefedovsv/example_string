{"version":3,"sources":["components/App/App.module.css","components/SymbolInput/SymbolInput.tsx","components/SymbolTable/SymbolTable.tsx","components/PieChart/PieChart.tsx","components/App/App.tsx","store/Store.ts","index.tsx"],"names":["module","exports","box","SymbolInput","observer","_class2","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","initializerDefineProperty","_descriptor","assertThisInitialized","onChange","e","saveValue","target","value","notify","inherits","createClass","key","react_default","a","createElement","input","placeholder","props","prefix","icon","type","style","color","allowClear","Component","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","_class","SymbolTable","SymbolTable_class","store","symbols","table","dataSource","columns","pagination","title","dataIndex","PieChart","PieChart_class","data","map","item","symbol","count","getColorByChar","dist_default","label","_ref","Math","round","percentage","lineWidth","rounded","height","labelPosition","labelStyle","fontSize","fontFamily","fill","colors","char","random","toString","padStart","App","inject","_dec","App_class","onChangeSymbol","setValue","onValidSymbol","setValidSymbols","_this2","className","styles","SymbolInput_SymbolInput","mobx_react_module","validSymbols","SymbolTable_SymbolTable","PieChart_PieChart","Store","Store_class","Store_descriptor","_descriptor2","symboMapper","getSymbolMapper","updateMap","mapper","Map","split","forEach","reg","RegExp","arrSymbols","match","set","newMap","symbolsMap","has","delete","get","toConsumableArray","entries","_ref2","slicedToArray","action","getOwnPropertyDescriptor","computed","__webpack_require__","d","__webpack_exports__","src_store","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd75e810.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__3n_3L\"};","import React, { Component, ChangeEvent } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { Input, Icon } from \"antd\";\r\nimport { IStore } from \"../../store/IStore\";\r\ninterface SymbolInputProps {\r\n  onChange: (value: string) => void;\r\n  placeholder:string;\r\n  store?: IStore;\r\n}\r\n@observer\r\nexport class SymbolInput extends Component<SymbolInputProps> {\r\n  @observable\r\n  value: string = \"\";\r\n  render(): React.ReactNode {\r\n    return (\r\n      <Input\r\n        value={this.value}\r\n        onChange={this.onChange}\r\n        placeholder={this.props.placeholder}\r\n        prefix={<Icon type=\"message\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        allowClear\r\n      />\r\n    );\r\n  }\r\n  onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.saveValue(e.target.value);\r\n    this.notify();\r\n  };\r\n  saveValue(value: string): void {\r\n    this.value = value;\r\n  }\r\n  notify(): void {\r\n    const { onChange } = this.props;\r\n    onChange(this.value);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { IStore } from \"../../store/IStore\";\r\nimport { Table } from \"antd\";\r\nexport interface SymbolTableProps {\r\n    store: IStore;\r\n}\r\n@observer\r\nexport class SymbolTable extends Component<SymbolTableProps> {\r\n    public render(): React.ReactNode {\r\n        const store = this.props.store;\r\n        const data = store.symbols;\r\n        return data.length ? (\r\n            <Table \r\n                dataSource={store.symbols}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n        ) : null;\r\n    }\r\n}\r\nconst columns = [\r\n    {\r\n        title: \"Symbol\",\r\n        dataIndex: \"symbol\",\r\n        key: \"symbol\"\r\n    },\r\n    {\r\n        title: \"Count\",\r\n        dataIndex: \"count\",\r\n        key: \"count\"\r\n    }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { IStore } from \"../../store/IStore\";\r\nimport ReactMinimalPieChart from \"react-minimal-pie-chart\";\r\nexport interface PieChartProps {\r\n    store: IStore;\r\n}\r\n\r\n@observer\r\nexport class PieChart extends Component<PieChartProps> {\r\n    public render(): React.ReactNode {\r\n        const store = this.props.store;\r\n\r\n        const data: {\r\n            title: string;\r\n            value: number;\r\n            color: string;\r\n            key: string;\r\n        }[] = store.symbols.map(item => ({\r\n            title: item.symbol,\r\n            value: item.count,\r\n            key: item.symbol,\r\n            color: getColorByChar(item.symbol)\r\n        }));\r\n        return (\r\n            <ReactMinimalPieChart\r\n                data={data}\r\n                label={({ data, dataIndex }) =>\r\n                    Math.round(data[dataIndex].percentage) + \"%\" \r\n                }\r\n                lineWidth={20}\r\n                rounded\r\n                style={{ height: '500px' }}\r\n                labelPosition={60}\r\n                labelStyle={{\r\n                    fontSize: \"5px\",\r\n                    fontFamily: \"sans-serif\",\r\n                    fill: \"#000000\"\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst colors: { [field: string]: string } = {};\r\n\r\nfunction getColorByChar(char: string): string {\r\n    if (!colors[char]) {\r\n        const color: string = `#${Math.round(Math.random() * 0xffffff)\r\n            .toString(16)\r\n            .padStart(6, \"0\")}`;\r\n\r\n        colors[char] = color;\r\n    }\r\n\r\n    return colors[char];\r\n}","import React, { Component } from 'react'\r\nimport { inject, Observer } from \"mobx-react\";\r\nimport { SymbolInput } from '../SymbolInput/SymbolInput'\r\nimport { SymbolTable } from '../SymbolTable/SymbolTable'\r\nimport { PieChart } from '../PieChart/PieChart'\r\nimport { IStore } from '../../store/IStore'\r\nimport styles from './App.module.css'\r\ninterface AppProps {\r\n  store?: IStore;\r\n}\r\n@inject(\"store\")\r\nexport class App extends Component<AppProps> {\r\n  render(): React.ReactNode {\r\n    const store: IStore = this.props.store!;\r\n    return (\r\n      <div className={styles.box} >\r\n        <div>\r\n          <SymbolInput  placeholder={'Введите искомые символы! (пример: a,b,c)'} onChange={this.onValidSymbol}/>\r\n        </div>\r\n        <Observer>{() => <div><SymbolInput placeholder={`Допустимые для ввода символы: ${store.validSymbols}`} onChange={this.onChangeSymbol} /></div>}</Observer>\r\n        <div>\r\n          <SymbolTable store={store} />\r\n        </div>\r\n        <div>\r\n          <PieChart store={store} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  onChangeSymbol = (value: string) => {\r\n    const store: IStore = this.props.store!;\r\n    store.setValue(value);\r\n  };\r\n  onValidSymbol = (value: string) => {\r\n    const store: IStore = this.props.store!;\r\n    store.setValidSymbols(value)\r\n  };\r\n}","import { action, computed, observable } from \"mobx\";\r\nimport { IStore, symbolsData } from \"./IStore\";\r\nexport class Store implements IStore {\r\n    @observable validSymbols: string = ''\r\n    @observable symbolsMap = new Map<string, number>()\r\n\r\n    @action\r\n    setValue(value: string) {\r\n        const symboMapper: Map<string, number> = this.getSymbolMapper(value);\r\n        this.updateMap(symboMapper);\r\n    }\r\n    @action\r\n    setValidSymbols(value: string): void {\r\n        this.validSymbols = value\r\n    }\r\n    @computed get symbols(): symbolsData[] {\r\n        const symbols: symbolsData[] = [...this.symbolsMap.entries()].map(([key, value]) => ({\r\n            symbol: key,\r\n            count: value\r\n        }));\r\n        return symbols;\r\n    }\r\n    getSymbolMapper(value: string) {\r\n        const mapper: Map<string, number> = new Map<string, number>();\r\n        if (this.validSymbols !== '') {\r\n            const getMap: string[] = this.validSymbols.split(',')\r\n            getMap.forEach((symbol: string) => {\r\n                let reg = new RegExp(symbol, 'g');\r\n                let arrSymbols = value.match(reg);\r\n                if (arrSymbols) {\r\n                    mapper.set(arrSymbols[0], arrSymbols.length);\r\n                }\r\n            })\r\n        }\r\n        return mapper\r\n    }\r\n    updateMap(newMap: Map<string, number>): void {\r\n        this.symbolsMap.forEach((value, key) => {\r\n            if (!newMap.has(key)) {\r\n                this.symbolsMap.delete(key);\r\n            }\r\n        });\r\n        newMap.forEach((value, key) => {\r\n            this.symbolsMap.set(key, value);\r\n        });\r\n    }\r\n} ","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'mobx-react'\r\nimport 'antd/dist/antd.css'\r\nimport { App } from './components/App/App'\r\nimport { Store } from './store/Store'\r\nexport const store = {\r\n  store: new Store(),\r\n}\r\nrender(\r\n  <Provider {...store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}